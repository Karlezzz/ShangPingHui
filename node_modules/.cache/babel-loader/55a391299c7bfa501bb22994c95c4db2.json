{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqLogin, reqLogout, reqRegisterCode, reqUserInfo, reqUserRegister } from \"@/api\";\nimport { getToken, removeToken, setToken } from \"@/utils/token\";\nconst state = {\n  code: '',\n  token: getToken() || '',\n  userData: {}\n};\nconst mutations = {\n  GETREGISTERCODE(state, data) {\n    state.code = data;\n  },\n\n  GETUSERINFO(state, data) {\n    state.userData = data;\n  },\n\n  USERLOGOUT(state) {\n    state.code = '';\n    state.token = '';\n    state.userData = {};\n  }\n\n};\nconst actions = {\n  async getRegisterCode({\n    commit\n  }, phone) {\n    let result = await reqRegisterCode(phone);\n\n    if (result.code === 200) {\n      commit(\"GETREGISTERCODE\", result.data);\n    }\n  },\n\n  async userRegister({\n    commit\n  }, data) {\n    let result = await reqUserRegister(data);\n\n    if (result.code === 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error(result.message));\n    }\n  },\n\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqLogin(data);\n\n    if (result.code === 200) {\n      setToken(result.data.token);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error(result.message));\n    }\n  },\n\n  async getUserInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n\n    if (result.code === 200) {\n      commit('GETUSERINFO', result.data);\n      return 'ok';\n    } else {\n      return Promise.reject(new Error(result.message));\n    }\n  },\n\n  async userLogOut({\n    commit\n  }) {\n    let result = await reqLogout();\n\n    if (result.code === 200) {\n      removeToken();\n      commit(\"USERLOGOUT\");\n      return 'ok';\n    } else {\n      return Promise.reject(new Error(result.message));\n    }\n  }\n\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}