{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqCartList, reqDeletCartById, reqUpdateCheckedById } from \"@/api\";\nconst state = {\n  cartList: []\n};\nconst actions = {\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n\n    if (result.code == 200) {\n      commit(\"GETCARTLIST\", result.data);\n    }\n  },\n\n  async deleteCartListBySkuId({\n    commit\n  }, skuId) {\n    let result = await reqDeletCartById(skuId);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      Promise.reject(new Error('faile'));\n    }\n  },\n\n  async updateCheckBySkuId({\n    commit\n  }, skuId, isChecked) {\n    let result = await reqUpdateCheckedById(skuId, isChecked);\n\n    if (result.code === 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  }\n\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n\n};\nconst getters = {\n  cartInfo(state) {\n    return state.cartList[0] || {};\n  }\n\n};\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqDeletCartById","reqUpdateCheckedById","state","cartList","actions","getCartList","commit","result","code","data","deleteCartListBySkuId","skuId","Promise","reject","Error","updateCheckBySkuId","isChecked","mutations","GETCARTLIST","getters","cartInfo"],"sources":["E:/学习/web前端/项目实践/尚品汇/尚品汇/app/src/store/shopCart/shopCart.js"],"sourcesContent":["import {\r\n    reqCartList, reqDeletCartById, reqUpdateCheckedById\r\n} from \"@/api\"\r\n\r\nconst state = {\r\n    cartList: []\r\n}\r\nconst actions = {\r\n    async getCartList({\r\n        commit\r\n    }) {\r\n        let result = await reqCartList()\r\n        if (result.code == 200) {\r\n            commit(\"GETCARTLIST\", result.data)\r\n        }\r\n    },\r\n    async deleteCartListBySkuId({commit},skuId){\r\n        let result = await reqDeletCartById(skuId)\r\n        if(result.code == 200){\r\n            return 'ok'\r\n        }else{\r\n            Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    async updateCheckBySkuId({commit},skuId,isChecked){\r\n        let result = await reqUpdateCheckedById(skuId,isChecked)\r\n            if(result.code===200){\r\n                return 'ok'\r\n            }else{\r\n                return Promise.reject(new Error('faile'))\r\n            }\r\n        \r\n    }\r\n}\r\nconst mutations = {\r\n    GETCARTLIST(state, cartList) {\r\n        state.cartList = cartList\r\n    }\r\n}\r\nconst getters = {\r\n    cartInfo(state) {\r\n        return state.cartList[0] || {} \r\n    },\r\n}\r\nexport default {\r\n    state,\r\n    actions,\r\n    mutations,\r\n    getters\r\n}"],"mappings":";AAAA,SACIA,WADJ,EACiBC,gBADjB,EACmCC,oBADnC,QAEO,OAFP;AAIA,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAE;AADA,CAAd;AAGA,MAAMC,OAAO,GAAG;EACZ,MAAMC,WAAN,CAAkB;IACdC;EADc,CAAlB,EAEG;IACC,IAAIC,MAAM,GAAG,MAAMR,WAAW,EAA9B;;IACA,IAAIQ,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;MACpBF,MAAM,CAAC,aAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;IACH;EACJ,CARW;;EASZ,MAAMC,qBAAN,CAA4B;IAACJ;EAAD,CAA5B,EAAqCK,KAArC,EAA2C;IACvC,IAAIJ,MAAM,GAAG,MAAMP,gBAAgB,CAACW,KAAD,CAAnC;;IACA,IAAGJ,MAAM,CAACC,IAAP,IAAe,GAAlB,EAAsB;MAClB,OAAO,IAAP;IACH,CAFD,MAEK;MACDI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf;IACH;EACJ,CAhBW;;EAiBZ,MAAMC,kBAAN,CAAyB;IAACT;EAAD,CAAzB,EAAkCK,KAAlC,EAAwCK,SAAxC,EAAkD;IAC9C,IAAIT,MAAM,GAAG,MAAMN,oBAAoB,CAACU,KAAD,EAAOK,SAAP,CAAvC;;IACI,IAAGT,MAAM,CAACC,IAAP,KAAc,GAAjB,EAAqB;MACjB,OAAO,IAAP;IACH,CAFD,MAEK;MACD,OAAOI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;IACH;EAER;;AAzBW,CAAhB;AA2BA,MAAMG,SAAS,GAAG;EACdC,WAAW,CAAChB,KAAD,EAAQC,QAAR,EAAkB;IACzBD,KAAK,CAACC,QAAN,GAAiBA,QAAjB;EACH;;AAHa,CAAlB;AAKA,MAAMgB,OAAO,GAAG;EACZC,QAAQ,CAAClB,KAAD,EAAQ;IACZ,OAAOA,KAAK,CAACC,QAAN,CAAe,CAAf,KAAqB,EAA5B;EACH;;AAHW,CAAhB;AAKA,eAAe;EACXD,KADW;EAEXE,OAFW;EAGXa,SAHW;EAIXE;AAJW,CAAf"},"metadata":{},"sourceType":"module"}