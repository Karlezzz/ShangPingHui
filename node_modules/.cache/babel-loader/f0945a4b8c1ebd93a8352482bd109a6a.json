{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { reqCartList, reqDeletCartById, reqUpdateCheckedById } from \"@/api\";\nconst state = {\n  cartList: []\n};\nconst actions = {\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n\n    if (result.code == 200) {\n      commit(\"GETCARTLIST\", result.data);\n    }\n  },\n\n  async deleteCartListBySkuId({\n    commit\n  }, skuId) {\n    let result = await reqDeletCartById(skuId);\n\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      Promise.reject(new Error('faile'));\n    }\n  },\n\n  async updateCheckBySkuId({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateCheckedById(skuId, isChecked);\n\n    if (result.code === 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n\n  deletAllCheckedCart({\n    dispatch,\n    getters\n  }) {\n    let promiseAll = [];\n    getters.cartInfo.cartInfoList.forEach(item => {\n      let promise = item.isChecked === 1 ? dispatch('deleteCartListBySkuId', item.skuId) : '';\n      promiseAll.push(promise);\n    });\n    return Promise.all(promiseAll);\n  },\n\n  checkedAll({\n    dispatch,\n    getters\n  }, event) {\n    let promiseAll = [];\n    getters.cartInfo.cartInfoList.forEach(item => {\n      let promise = dispatch('updateCheckBySkuId', {\n        skuId: item.skuId,\n        isChecked: event.target.checked === true ? '1' : '0'\n      });\n      promiseAll.push(promise);\n    });\n    return Promise.all(promiseAll);\n  }\n\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n\n};\nconst getters = {\n  cartInfo(state) {\n    return state.cartList[0] || {};\n  }\n\n};\nexport default {\n  state,\n  actions,\n  mutations,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}