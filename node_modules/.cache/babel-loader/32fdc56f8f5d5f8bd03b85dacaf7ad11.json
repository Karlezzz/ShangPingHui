{"ast":null,"code":"import { getToken } from '@/utils/token';\nimport VueRouter from 'vue-router';\nimport routes from './routes';\nimport store from '../store/index';\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\n\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n\nconst router = new VueRouter({\n  routes,\n\n  scrollBehavior(to, from, savedPosition) {\n    return {\n      y: 0,\n      behavior: 'smooth'\n    };\n  }\n\n});\nrouter.beforeEach((to, from, next) => {\n  let token = getToken();\n  let userName = store.state.user.name;\n\n  if (token) {\n    if (to.path == '/login') next(from);else {\n      if (userName) next();else {\n        store.dispatch('getUserInfo').then(next()).catch(error => {\n          store.dispatch('userLogOut').then(next('/login'));\n        });\n      }\n    }\n  } else {\n    let toPath = to.path;\n    const cantGo = ['/trade', '/pay', '/paySuccess', '/center/myOrder'];\n    if (cantGo.indexOf(toPath) != -1) next('/login?redirect=' + toPath);else {\n      next();\n    }\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module"}